apiVersion: v1
kind: Template
labels:
  demo: microservices-demo
metadata:
  annotations:
    description: Socks Shop demo microservices application buildconfigs template
    iconClass: icon-nodejs
    tags: microservice,nodejs
  name: ${NAME_PREFIX}-front-end-deployments
objects:
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    name: default_edit
  roleRef:
    name: view
  subjects:
  - kind: ServiceAccount
    name: default
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${NAME_PREFIX}-front-end
    labels:
      app: ${NAME_PREFIX}-front-end
      comp-required: "true"
  spec:
    replicas: 1
    selector:
      app: ${NAME_PREFIX}-front-end
      deploymentconfig: ${NAME_PREFIX}-front-end
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: ${NAME_PREFIX}-front-end
          deploymentconfig: ${NAME_PREFIX}-front-end
      spec:
        containers:
        - env:
          - name: SESSION_REDIS
            value: "true"
          image: ${NAME_PREFIX}-front-end
          imagePullPolicy: Always
          name: ${NAME_PREFIX}-front-end
          ports:
          - containerPort: 8079
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8079
            initialDelaySeconds: 300
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /
              port: 8079
            initialDelaySeconds: 30
            periodSeconds: 3
          resources:
            limits:
              cpu: 300m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 300Mi
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
              - all
          readOnlyRootFilesystem: true
        terminationGracePeriodSeconds: 30
      nodeSelector:
        beta.kubernetes.io/os: linux
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME_PREFIX}-front-end
        from:
          kind: ImageStreamTag
          name: ${NAME_PREFIX}-front-end:${APP_VERSION}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${NAME_PREFIX}-front-end
      comp-required: "true"
    name: ${NAME_PREFIX}-front-end
  spec:
    ports:
    - name: 8079-tcp
      port: 8079
      protocol: TCP
      targetPort: 8079
    selector:
      deploymentconfig: ${NAME_PREFIX}-front-end
- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME_PREFIX}-front-end
    labels:
      app: ${NAME_PREFIX}-front-end
      comp-required: "true"
  spec:
    host: ${NAME_PREFIX}-front-end-${HOSTNAME_SUFFIX}
    to:
      kind: Service
      name: ${NAME_PREFIX}-front-end
parameters:
- description: Name prefix for all names
  displayName: Name prefix for all names
  name: NAME_PREFIX
  required: true
- description: Application image version to be deployed (imagestreams should exist)
  displayName: Image version
  name: APP_VERSION
  required: true
  value: latest
- description: Hostname suffix used for routes
  displayName: Hostname suffix used for routes
  name: HOSTNAME_SUFFIX
  required: true